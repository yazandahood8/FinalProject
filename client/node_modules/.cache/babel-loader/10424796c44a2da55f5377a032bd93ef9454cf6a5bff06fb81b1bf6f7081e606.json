{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anand\\\\OneDrive\\\\\\u05E9\\u05D5\\u05DC\\u05D7\\u05DF \\u05D4\\u05E2\\u05D1\\u05D5\\u05D3\\u05D4\\\\\\u05DC\\u05D9\\u05DE\\u05D5\\u05D3\\u05D9\\u05DD\\\\\\u05DE\\u05D3\\u05E2\\u05D9 \\u05D4\\u05DE\\u05D7\\u05E9\\u05D1\\\\\\u05E9\\u05E0\\u05D4 \\u05D2\\\\\\u05E1\\u05DE\\u05E1\\u05D8\\u05E8 \\u05D1\\\\FullStack\\\\HomeWorks\\\\Part1\\\\client\\\\src\\\\components\\\\Chatbot\\\\Chatbot.js\",\n  _s = $RefreshSig$();\n// src/components/Chatbot/Chatbot.js\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Box, IconButton, TextField, Button, Typography, CircularProgress } from '@mui/material';\nimport ChatIcon from '@mui/icons-material/Chat';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport './Chatbot.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GEMINI_URL = 'https://generativelanguage.googleapis.com/v1beta2/models/gemini-2.0-flash:generateMessage';\nconst API_KEY = \"AIzaSyBSzquJdE49XPmvP9wjHjsam7Op24nTb2M\";\nexport default function Chatbot() {\n  _s();\n  const [open, setOpen] = useState(false);\n  const [messages, setMessages] = useState([{\n    from: 'bot',\n    text: 'Hi there! I can answer questions about Maria & Yazan.'\n  }]);\n  const [input, setInput] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [kb, setKb] = useState(null);\n  const scrollRef = useRef();\n\n  // Load knowledge base from JSON endpoints\n  useEffect(() => {\n    async function fetchKb() {\n      try {\n        const [projects, skills, resume, cases, timeline, profile] = await Promise.all([fetch('/api/portfolio/projects').then(r => r.json()), fetch('/api/portfolio/skills').then(r => r.json()), fetch('/api/portfolio/resume').then(r => r.json()), fetch('/api/portfolio/casestudies').then(r => r.json()), fetch('/api/portfolio/resume').then(r => r.json()),\n        // reuse resume for timeline\n        fetch('/api/portfolio/profile').then(r => r.json())]);\n        setKb({\n          projects,\n          skills,\n          resume,\n          cases,\n          timeline,\n          profile\n        });\n      } catch (e) {\n        console.error('KB load error', e);\n      }\n    }\n    fetchKb();\n  }, []);\n  useEffect(() => {\n    if (scrollRef.current) {\n      scrollRef.current.scrollTop = scrollRef.current.scrollHeight;\n    }\n  }, [messages, open]);\n  const toggleOpen = () => setOpen(o => !o);\n  const sendMessage = async () => {\n    if (!input.trim() || loading || !kb) return;\n    const userMsg = input.trim();\n    setMessages(msgs => [...msgs, {\n      from: 'user',\n      text: userMsg\n    }]);\n    setInput('');\n    setLoading(true);\n    try {\n      var _data$candidates, _data$candidates$;\n      const systemPrompt = `You are a knowledgeable assistant about Maria & Yazan. Use this data: ${JSON.stringify(kb)}`;\n      const payload = {\n        model: 'gemini-2.0-flash',\n        prompt: {\n          messages: [{\n            author: 'system',\n            content: systemPrompt\n          }, ...messages.map(m => ({\n            author: m.from === 'bot' ? 'assistant' : 'user',\n            content: m.text\n          })), {\n            author: 'user',\n            content: userMsg\n          }]\n        }\n      };\n      const res = await fetch(`${GEMINI_URL}?key=${API_KEY}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n      const data = await res.json();\n      const botReply = (data === null || data === void 0 ? void 0 : (_data$candidates = data.candidates) === null || _data$candidates === void 0 ? void 0 : (_data$candidates$ = _data$candidates[0]) === null || _data$candidates$ === void 0 ? void 0 : _data$candidates$.content) || 'Sorry, I could not respond.';\n      setMessages(msgs => [...msgs, {\n        from: 'bot',\n        text: botReply\n      }]);\n    } catch (e) {\n      console.error(e);\n      setMessages(msgs => [...msgs, {\n        from: 'bot',\n        text: 'Error connecting to the API.'\n      }]);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: \"chatbot-container\",\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      className: \"chatbot-toggle\",\n      onClick: toggleOpen,\n      children: open ? /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(ChatIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 33\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n      children: open && /*#__PURE__*/_jsxDEV(motion.div, {\n        className: \"chatbot-panel\",\n        initial: {\n          opacity: 0,\n          y: 50\n        },\n        animate: {\n          opacity: 1,\n          y: 0\n        },\n        exit: {\n          opacity: 0,\n          y: 50\n        },\n        transition: {\n          duration: 0.3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          className: \"chatbot-header\",\n          children: \"Chat with Maria & Yazan\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          className: \"chatbot-messages\",\n          ref: scrollRef,\n          children: [messages.map((m, i) => /*#__PURE__*/_jsxDEV(Box, {\n            className: `chatbot-message ${m.from}`,\n            children: m.text\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 17\n          }, this)), loading && /*#__PURE__*/_jsxDEV(CircularProgress, {\n            size: 20,\n            className: \"chatbot-loading\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          className: \"chatbot-input-area\",\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            size: \"small\",\n            placeholder: \"Type a message...\",\n            value: input,\n            onChange: e => setInput(e.target.value),\n            onKeyDown: e => e.key === 'Enter' && sendMessage(),\n            className: \"chatbot-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: sendMessage,\n            disabled: loading || !kb,\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n_s(Chatbot, \"vhtEa+nbxVIrgfoauZb701QYvlY=\");\n_c = Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Box","IconButton","TextField","Button","Typography","CircularProgress","ChatIcon","CloseIcon","motion","AnimatePresence","jsxDEV","_jsxDEV","GEMINI_URL","API_KEY","Chatbot","_s","open","setOpen","messages","setMessages","from","text","input","setInput","loading","setLoading","kb","setKb","scrollRef","fetchKb","projects","skills","resume","cases","timeline","profile","Promise","all","fetch","then","r","json","e","console","error","current","scrollTop","scrollHeight","toggleOpen","o","sendMessage","trim","userMsg","msgs","_data$candidates","_data$candidates$","systemPrompt","JSON","stringify","payload","model","prompt","author","content","map","m","res","method","headers","body","data","botReply","candidates","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","div","initial","opacity","y","animate","exit","transition","duration","ref","i","size","variant","placeholder","value","onChange","target","onKeyDown","key","disabled","_c","$RefreshReg$"],"sources":["C:/Users/anand/OneDrive/שולחן העבודה/לימודים/מדעי המחשב/שנה ג/סמסטר ב/FullStack/HomeWorks/Part1/client/src/components/Chatbot/Chatbot.js"],"sourcesContent":["// src/components/Chatbot/Chatbot.js\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport {\r\n  Box,\r\n  IconButton,\r\n  TextField,\r\n  Button,\r\n  Typography,\r\n  CircularProgress\r\n} from '@mui/material';\r\nimport ChatIcon from '@mui/icons-material/Chat';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport './Chatbot.css';\r\n\r\nconst GEMINI_URL =\r\n  'https://generativelanguage.googleapis.com/v1beta2/models/gemini-2.0-flash:generateMessage';\r\nconst API_KEY=\"AIzaSyBSzquJdE49XPmvP9wjHjsam7Op24nTb2M\"\r\nexport default function Chatbot() {\r\n  const [open, setOpen] = useState(false);\r\n  const [messages, setMessages] = useState([\r\n    { from: 'bot', text: 'Hi there! I can answer questions about Maria & Yazan.' }\r\n  ]);\r\n  const [input, setInput] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [kb, setKb] = useState(null);\r\n  const scrollRef = useRef();\r\n\r\n  // Load knowledge base from JSON endpoints\r\n  useEffect(() => {\r\n    async function fetchKb() {\r\n      try {\r\n        const [projects, skills, resume, cases, timeline, profile] = await Promise.all([\r\n          fetch('/api/portfolio/projects').then(r => r.json()),\r\n          fetch('/api/portfolio/skills').then(r => r.json()),\r\n          fetch('/api/portfolio/resume').then(r => r.json()),\r\n          fetch('/api/portfolio/casestudies').then(r => r.json()),\r\n          fetch('/api/portfolio/resume').then(r => r.json()), // reuse resume for timeline\r\n          fetch('/api/portfolio/profile').then(r => r.json())\r\n        ]);\r\n        setKb({ projects, skills, resume, cases, timeline, profile });\r\n      } catch (e) {\r\n        console.error('KB load error', e);\r\n      }\r\n    }\r\n    fetchKb();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (scrollRef.current) {\r\n      scrollRef.current.scrollTop = scrollRef.current.scrollHeight;\r\n    }\r\n  }, [messages, open]);\r\n\r\n  const toggleOpen = () => setOpen(o => !o);\r\n\r\n  const sendMessage = async () => {\r\n    if (!input.trim() || loading || !kb) return;\r\n    const userMsg = input.trim();\r\n    setMessages(msgs => [...msgs, { from: 'user', text: userMsg }]);\r\n    setInput('');\r\n    setLoading(true);\r\n    try {\r\n      const systemPrompt = `You are a knowledgeable assistant about Maria & Yazan. Use this data: ${JSON.stringify(\r\n        kb\r\n      )}`;\r\n      const payload = {\r\n        model: 'gemini-2.0-flash',\r\n        prompt: { messages: [\r\n          { author: 'system', content: systemPrompt },\r\n          ...messages.map(m => ({ author: m.from === 'bot' ? 'assistant' : 'user', content: m.text })),\r\n          { author: 'user', content: userMsg }\r\n        ] }\r\n      };\r\n      const res = await fetch(`${GEMINI_URL}?key=${API_KEY}`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(payload)\r\n      });\r\n      const data = await res.json();\r\n      const botReply = data?.candidates?.[0]?.content || 'Sorry, I could not respond.';\r\n      setMessages(msgs => [...msgs, { from: 'bot', text: botReply }]);\r\n    } catch (e) {\r\n      console.error(e);\r\n      setMessages(msgs => [...msgs, { from: 'bot', text: 'Error connecting to the API.' }]);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box className=\"chatbot-container\">\r\n      <IconButton className=\"chatbot-toggle\" onClick={toggleOpen}>\r\n        {open ? <CloseIcon /> : <ChatIcon />}\r\n      </IconButton>\r\n      <AnimatePresence>\r\n        {open && (\r\n          <motion.div\r\n            className=\"chatbot-panel\"\r\n            initial={{ opacity: 0, y: 50 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            exit={{ opacity: 0, y: 50 }}\r\n            transition={{ duration: 0.3 }}\r\n          >\r\n            <Typography className=\"chatbot-header\">Chat with Maria & Yazan</Typography>\r\n            <Box className=\"chatbot-messages\" ref={scrollRef}>\r\n              {messages.map((m, i) => (\r\n                <Box\r\n                  key={i}\r\n                  className={`chatbot-message ${m.from}`}>\r\n                  {m.text}\r\n                </Box>\r\n              ))}\r\n              {loading && <CircularProgress size={20} className=\"chatbot-loading\" />}\r\n            </Box>\r\n            <Box className=\"chatbot-input-area\">\r\n              <TextField\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                placeholder=\"Type a message...\"\r\n                value={input}\r\n                onChange={e => setInput(e.target.value)}\r\n                onKeyDown={e => e.key === 'Enter' && sendMessage()}\r\n                className=\"chatbot-input\"\r\n              />\r\n              <Button variant=\"contained\" onClick={sendMessage} disabled={loading || !kb}>\r\n                Send\r\n              </Button>\r\n            </Box>\r\n          </motion.div>\r\n        )}\r\n      </AnimatePresence>\r\n    </Box>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}