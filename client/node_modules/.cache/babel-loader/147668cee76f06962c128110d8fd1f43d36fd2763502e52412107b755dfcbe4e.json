{"ast":null,"code":"\"use client\";\n\nimport { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\nconst PresenceChild = ({\n  children,\n  initial,\n  isPresent,\n  onExitComplete,\n  custom,\n  presenceAffectsLayout,\n  mode,\n  anchorX\n}) => {\n  const presenceChildren = useConstant(newChildrenMap);\n  const id = useId();\n  let isReusedContext = true;\n  let context = useMemo(() => {\n    isReusedContext = false;\n    return {\n      id,\n      initial,\n      isPresent,\n      custom,\n      onExitComplete: childId => {\n        presenceChildren.set(childId, true);\n        for (const isComplete of presenceChildren.values()) {\n          if (!isComplete) return; // can stop searching when any is incomplete\n        }\n        onExitComplete && onExitComplete();\n      },\n      register: childId => {\n        presenceChildren.set(childId, false);\n        return () => presenceChildren.delete(childId);\n      }\n    };\n  }, [isPresent, presenceChildren, onExitComplete]);\n  /**\n   * If the presence of a child affects the layout of the components around it,\n   * we want to make a new context value to ensure they get re-rendered\n   * so they can detect that layout change.\n   */\n  if (presenceAffectsLayout && isReusedContext) {\n    context = {\n      ...context\n    };\n  }\n  useMemo(() => {\n    presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n  }, [isPresent]);\n  /**\n   * If there's no `motion` components to fire exit animations, we want to remove this\n   * component immediately.\n   */\n  React.useEffect(() => {\n    !isPresent && !presenceChildren.size && onExitComplete && onExitComplete();\n  }, [isPresent]);\n  if (mode === \"popLayout\") {\n    children = jsx(PopChild, {\n      isPresent: isPresent,\n      anchorX: anchorX,\n      children: children\n    });\n  }\n  return jsx(PresenceContext.Provider, {\n    value: context,\n    children: children\n  });\n};\nfunction newChildrenMap() {\n  return new Map();\n}\nexport { PresenceChild };","map":{"version":3,"names":["jsx","React","useId","useMemo","PresenceContext","useConstant","PopChild","PresenceChild","children","initial","isPresent","onExitComplete","custom","presenceAffectsLayout","mode","anchorX","presenceChildren","newChildrenMap","id","isReusedContext","context","childId","set","isComplete","values","register","delete","forEach","_","key","useEffect","size","Provider","value","Map"],"sources":["C:/Users/anand/OneDrive/שולחן העבודה/לימודים/מדעי המחשב/שנה ג/סמסטר ב/FullStack/HomeWorks/Part1/client/node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs"],"sourcesContent":["\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, anchorX, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    let isReusedContext = true;\n    let context = useMemo(() => {\n        isReusedContext = false;\n        return {\n            id,\n            initial,\n            isPresent,\n            custom,\n            onExitComplete: (childId) => {\n                presenceChildren.set(childId, true);\n                for (const isComplete of presenceChildren.values()) {\n                    if (!isComplete)\n                        return; // can stop searching when any is incomplete\n                }\n                onExitComplete && onExitComplete();\n            },\n            register: (childId) => {\n                presenceChildren.set(childId, false);\n                return () => presenceChildren.delete(childId);\n            },\n        };\n    }, [isPresent, presenceChildren, onExitComplete]);\n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    if (presenceAffectsLayout && isReusedContext) {\n        context = { ...context };\n    }\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = (jsx(PopChild, { isPresent: isPresent, anchorX: anchorX, children: children }));\n    }\n    return (jsx(PresenceContext.Provider, { value: context, children: children }));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,GAAG,QAAQ,mBAAmB;AACvC,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,KAAK,EAAEC,OAAO,QAAQ,OAAO;AACtC,SAASC,eAAe,QAAQ,mCAAmC;AACnE,SAASC,WAAW,QAAQ,8BAA8B;AAC1D,SAASC,QAAQ,QAAQ,gBAAgB;AAEzC,MAAMC,aAAa,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,OAAO;EAAEC,SAAS;EAAEC,cAAc;EAAEC,MAAM;EAAEC,qBAAqB;EAAEC,IAAI;EAAEC;AAAS,CAAC,KAAK;EACvH,MAAMC,gBAAgB,GAAGX,WAAW,CAACY,cAAc,CAAC;EACpD,MAAMC,EAAE,GAAGhB,KAAK,CAAC,CAAC;EAClB,IAAIiB,eAAe,GAAG,IAAI;EAC1B,IAAIC,OAAO,GAAGjB,OAAO,CAAC,MAAM;IACxBgB,eAAe,GAAG,KAAK;IACvB,OAAO;MACHD,EAAE;MACFT,OAAO;MACPC,SAAS;MACTE,MAAM;MACND,cAAc,EAAGU,OAAO,IAAK;QACzBL,gBAAgB,CAACM,GAAG,CAACD,OAAO,EAAE,IAAI,CAAC;QACnC,KAAK,MAAME,UAAU,IAAIP,gBAAgB,CAACQ,MAAM,CAAC,CAAC,EAAE;UAChD,IAAI,CAACD,UAAU,EACX,OAAO,CAAC;QAChB;QACAZ,cAAc,IAAIA,cAAc,CAAC,CAAC;MACtC,CAAC;MACDc,QAAQ,EAAGJ,OAAO,IAAK;QACnBL,gBAAgB,CAACM,GAAG,CAACD,OAAO,EAAE,KAAK,CAAC;QACpC,OAAO,MAAML,gBAAgB,CAACU,MAAM,CAACL,OAAO,CAAC;MACjD;IACJ,CAAC;EACL,CAAC,EAAE,CAACX,SAAS,EAAEM,gBAAgB,EAAEL,cAAc,CAAC,CAAC;EACjD;AACJ;AACA;AACA;AACA;EACI,IAAIE,qBAAqB,IAAIM,eAAe,EAAE;IAC1CC,OAAO,GAAG;MAAE,GAAGA;IAAQ,CAAC;EAC5B;EACAjB,OAAO,CAAC,MAAM;IACVa,gBAAgB,CAACW,OAAO,CAAC,CAACC,CAAC,EAAEC,GAAG,KAAKb,gBAAgB,CAACM,GAAG,CAACO,GAAG,EAAE,KAAK,CAAC,CAAC;EAC1E,CAAC,EAAE,CAACnB,SAAS,CAAC,CAAC;EACf;AACJ;AACA;AACA;EACIT,KAAK,CAAC6B,SAAS,CAAC,MAAM;IAClB,CAACpB,SAAS,IACN,CAACM,gBAAgB,CAACe,IAAI,IACtBpB,cAAc,IACdA,cAAc,CAAC,CAAC;EACxB,CAAC,EAAE,CAACD,SAAS,CAAC,CAAC;EACf,IAAII,IAAI,KAAK,WAAW,EAAE;IACtBN,QAAQ,GAAIR,GAAG,CAACM,QAAQ,EAAE;MAAEI,SAAS,EAAEA,SAAS;MAAEK,OAAO,EAAEA,OAAO;MAAEP,QAAQ,EAAEA;IAAS,CAAC,CAAE;EAC9F;EACA,OAAQR,GAAG,CAACI,eAAe,CAAC4B,QAAQ,EAAE;IAAEC,KAAK,EAAEb,OAAO;IAAEZ,QAAQ,EAAEA;EAAS,CAAC,CAAC;AACjF,CAAC;AACD,SAASS,cAAcA,CAAA,EAAG;EACtB,OAAO,IAAIiB,GAAG,CAAC,CAAC;AACpB;AAEA,SAAS3B,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}