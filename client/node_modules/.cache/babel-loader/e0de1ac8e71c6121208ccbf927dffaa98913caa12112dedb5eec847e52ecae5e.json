{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anand\\\\OneDrive\\\\\\u05E9\\u05D5\\u05DC\\u05D7\\u05DF \\u05D4\\u05E2\\u05D1\\u05D5\\u05D3\\u05D4\\\\\\u05DC\\u05D9\\u05DE\\u05D5\\u05D3\\u05D9\\u05DD\\\\\\u05DE\\u05D3\\u05E2\\u05D9 \\u05D4\\u05DE\\u05D7\\u05E9\\u05D1\\\\\\u05E9\\u05E0\\u05D4 \\u05D2\\\\\\u05E1\\u05DE\\u05E1\\u05D8\\u05E8 \\u05D1\\\\FullStack\\\\HomeWorks\\\\Part1\\\\client\\\\src\\\\components\\\\Chatbot\\\\Chatbot.js\",\n  _s = $RefreshSig$();\n// src/components/Chatbot/Chatbot.js\nimport React, { useState } from 'react';\nimport { Box, IconButton, TextField, Button, Typography } from '@mui/material';\nimport ChatIcon from '@mui/icons-material/Chat';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport './Chatbot.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Chatbot() {\n  _s();\n  const [open, setOpen] = useState(false);\n  const [messages, setMessages] = useState([{\n    from: 'bot',\n    text: 'Hi there! How can I help you today?'\n  }]);\n  const [input, setInput] = useState('');\n  const toggleOpen = () => setOpen(o => !o);\n  const send = () => {\n    if (!input.trim()) return;\n    setMessages(m => [...m, {\n      from: 'user',\n      text: input\n    }]);\n    setInput('');\n    // Fake bot response\n    setTimeout(() => {\n      setMessages(m => [...m, {\n        from: 'bot',\n        text: 'Got it! Let me look into that.'\n      }]);\n    }, 800);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: \"chatbot-container\",\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      className: \"chatbot-toggle\",\n      color: \"primary\",\n      onClick: toggleOpen,\n      children: open ? /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(ChatIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 33\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n      children: open && /*#__PURE__*/_jsxDEV(motion.div, {\n        className: \"chatbot-panel\",\n        initial: {\n          opacity: 0,\n          y: 50\n        },\n        animate: {\n          opacity: 1,\n          y: 0\n        },\n        exit: {\n          opacity: 0,\n          y: 50\n        },\n        transition: {\n          duration: 0.3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          className: \"chatbot-header\",\n          children: \"Chat with us\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          className: \"chatbot-messages\",\n          children: messages.map((m, i) => /*#__PURE__*/_jsxDEV(Box, {\n            className: `chatbot-message ${m.from === 'bot' ? 'bot' : 'user'}`,\n            children: m.text\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          className: \"chatbot-input-area\",\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            size: \"small\",\n            placeholder: \"Type a message...\",\n            value: input,\n            onChange: e => setInput(e.target.value),\n            onKeyDown: e => e.key === 'Enter' && send(),\n            className: \"chatbot-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: send,\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(Chatbot, \"vu9G/VzoHl0SAZf7SuPBpFzL6mQ=\");\n_c = Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","Box","IconButton","TextField","Button","Typography","ChatIcon","CloseIcon","motion","AnimatePresence","jsxDEV","_jsxDEV","Chatbot","_s","open","setOpen","messages","setMessages","from","text","input","setInput","toggleOpen","o","send","trim","m","setTimeout","className","children","color","onClick","fileName","_jsxFileName","lineNumber","columnNumber","div","initial","opacity","y","animate","exit","transition","duration","variant","map","i","size","placeholder","value","onChange","e","target","onKeyDown","key","_c","$RefreshReg$"],"sources":["C:/Users/anand/OneDrive/שולחן העבודה/לימודים/מדעי המחשב/שנה ג/סמסטר ב/FullStack/HomeWorks/Part1/client/src/components/Chatbot/Chatbot.js"],"sourcesContent":["// src/components/Chatbot/Chatbot.js\r\nimport React, { useState } from 'react';\r\nimport { Box, IconButton, TextField, Button, Typography } from '@mui/material';\r\nimport ChatIcon from '@mui/icons-material/Chat';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport './Chatbot.css';\r\n\r\nexport default function Chatbot() {\r\n  const [open, setOpen] = useState(false);\r\n  const [messages, setMessages] = useState([\r\n    { from: 'bot', text: 'Hi there! How can I help you today?' }\r\n  ]);\r\n  const [input, setInput] = useState('');\r\n\r\n  const toggleOpen = () => setOpen(o => !o);\r\n\r\n  const send = () => {\r\n    if (!input.trim()) return;\r\n    setMessages(m => [...m, { from: 'user', text: input }]);\r\n    setInput('');\r\n    // Fake bot response\r\n    setTimeout(() => {\r\n      setMessages(m => [...m, { from: 'bot', text: 'Got it! Let me look into that.' }]);\r\n    }, 800);\r\n  };\r\n\r\n  return (\r\n    <Box className=\"chatbot-container\">\r\n      <IconButton\r\n        className=\"chatbot-toggle\"\r\n        color=\"primary\"\r\n        onClick={toggleOpen}\r\n      >\r\n        {open ? <CloseIcon /> : <ChatIcon />}\r\n      </IconButton>\r\n\r\n      <AnimatePresence>\r\n        {open && (\r\n          <motion.div\r\n            className=\"chatbot-panel\"\r\n            initial={{ opacity: 0, y: 50 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            exit={{ opacity: 0, y: 50 }}\r\n            transition={{ duration: 0.3 }}\r\n          >\r\n            <Typography variant=\"subtitle1\" className=\"chatbot-header\">\r\n              Chat with us\r\n            </Typography>\r\n            <Box className=\"chatbot-messages\">\r\n              {messages.map((m, i) => (\r\n                <Box\r\n                  key={i}\r\n                  className={`chatbot-message ${\r\n                    m.from === 'bot' ? 'bot' : 'user'\r\n                  }`}\r\n                >\r\n                  {m.text}\r\n                </Box>\r\n              ))}\r\n            </Box>\r\n            <Box className=\"chatbot-input-area\">\r\n              <TextField\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                placeholder=\"Type a message...\"\r\n                value={input}\r\n                onChange={e => setInput(e.target.value)}\r\n                onKeyDown={e => e.key === 'Enter' && send()}\r\n                className=\"chatbot-input\"\r\n              />\r\n              <Button variant=\"contained\" onClick={send}>\r\n                Send\r\n              </Button>\r\n            </Box>\r\n          </motion.div>\r\n        )}\r\n      </AnimatePresence>\r\n    </Box>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}